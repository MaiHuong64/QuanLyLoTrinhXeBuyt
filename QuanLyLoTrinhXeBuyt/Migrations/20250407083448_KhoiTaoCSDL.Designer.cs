// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuanLyLoTrinhXeBuyt.Data;

#nullable disable

namespace QuanLyLoTrinhXeBuyt.Migrations
{
    [DbContext(typeof(QLLTXB))]
    [Migration("20250407083448_KhoiTaoCSDL")]
    partial class KhoiTaoCSDL
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QuanLyLoTrinhXeBuyt.Data.ChuyenXe", b =>
                {
                    b.Property<string>("MaChuyen")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DiemXuatPhat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaTuyen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaXe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenChuyen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ThoiGianDen")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ThoiGianDi")
                        .HasColumnType("datetime2");

                    b.Property<string>("TuyenXeMaTuyen")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("XeMaXe")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MaChuyen");

                    b.HasIndex("TuyenXeMaTuyen");

                    b.HasIndex("XeMaXe");

                    b.ToTable("ChuyenXe");
                });

            modelBuilder.Entity("QuanLyLoTrinhXeBuyt.Data.DiemDung", b =>
                {
                    b.Property<string>("maDiemDung")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TuyenXeMaTuyen")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("maTuyen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tenDiemDung")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("maDiemDung");

                    b.HasIndex("TuyenXeMaTuyen");

                    b.ToTable("DiemDung");
                });

            modelBuilder.Entity("QuanLyLoTrinhXeBuyt.Data.NhanVien", b =>
                {
                    b.Property<string>("MaNV")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ChucVu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GioiTinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatKhau")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("QuyenHan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenDangNhap")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNV");

                    b.ToTable("NhanVien");
                });

            modelBuilder.Entity("QuanLyLoTrinhXeBuyt.Data.PhanCong", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("MaNhanVien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaXe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayLamViec")
                        .HasColumnType("datetime2");

                    b.Property<string>("NhanVienMaNV")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("XeMaXe")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("NhanVienMaNV");

                    b.HasIndex("XeMaXe");

                    b.ToTable("PhanCong");
                });

            modelBuilder.Entity("QuanLyLoTrinhXeBuyt.Data.TuyenXe", b =>
                {
                    b.Property<string>("MaTuyen")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SoChuyen")
                        .HasColumnType("int");

                    b.Property<string>("TenTuyen")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaTuyen");

                    b.ToTable("TuyenXe");
                });

            modelBuilder.Entity("QuanLyLoTrinhXeBuyt.Data.VeXe", b =>
                {
                    b.Property<string>("MaVe")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ChuyenXeMaChuyen")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("GiaVe")
                        .HasColumnType("real");

                    b.Property<string>("LoaiVe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenVe")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaVe");

                    b.HasIndex("ChuyenXeMaChuyen");

                    b.ToTable("VeXe");
                });

            modelBuilder.Entity("QuanLyLoTrinhXeBuyt.Data.Xe", b =>
                {
                    b.Property<string>("MaXe")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BienSo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoaiXe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NhanVienMaNV")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SoGhe")
                        .HasColumnType("int");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaXe");

                    b.HasIndex("NhanVienMaNV");

                    b.ToTable("Xe");
                });

            modelBuilder.Entity("QuanLyLoTrinhXeBuyt.Data.ChuyenXe", b =>
                {
                    b.HasOne("QuanLyLoTrinhXeBuyt.Data.TuyenXe", "TuyenXe")
                        .WithMany("ChuyenXe")
                        .HasForeignKey("TuyenXeMaTuyen")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyLoTrinhXeBuyt.Data.Xe", "Xe")
                        .WithMany()
                        .HasForeignKey("XeMaXe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TuyenXe");

                    b.Navigation("Xe");
                });

            modelBuilder.Entity("QuanLyLoTrinhXeBuyt.Data.DiemDung", b =>
                {
                    b.HasOne("QuanLyLoTrinhXeBuyt.Data.TuyenXe", "TuyenXe")
                        .WithMany("DiemDung")
                        .HasForeignKey("TuyenXeMaTuyen")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TuyenXe");
                });

            modelBuilder.Entity("QuanLyLoTrinhXeBuyt.Data.PhanCong", b =>
                {
                    b.HasOne("QuanLyLoTrinhXeBuyt.Data.NhanVien", "NhanVien")
                        .WithMany()
                        .HasForeignKey("NhanVienMaNV");

                    b.HasOne("QuanLyLoTrinhXeBuyt.Data.Xe", "Xe")
                        .WithMany()
                        .HasForeignKey("XeMaXe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhanVien");

                    b.Navigation("Xe");
                });

            modelBuilder.Entity("QuanLyLoTrinhXeBuyt.Data.VeXe", b =>
                {
                    b.HasOne("QuanLyLoTrinhXeBuyt.Data.ChuyenXe", null)
                        .WithMany("VeXe")
                        .HasForeignKey("ChuyenXeMaChuyen");
                });

            modelBuilder.Entity("QuanLyLoTrinhXeBuyt.Data.Xe", b =>
                {
                    b.HasOne("QuanLyLoTrinhXeBuyt.Data.NhanVien", null)
                        .WithMany("Xe")
                        .HasForeignKey("NhanVienMaNV");
                });

            modelBuilder.Entity("QuanLyLoTrinhXeBuyt.Data.ChuyenXe", b =>
                {
                    b.Navigation("VeXe");
                });

            modelBuilder.Entity("QuanLyLoTrinhXeBuyt.Data.NhanVien", b =>
                {
                    b.Navigation("Xe");
                });

            modelBuilder.Entity("QuanLyLoTrinhXeBuyt.Data.TuyenXe", b =>
                {
                    b.Navigation("ChuyenXe");

                    b.Navigation("DiemDung");
                });
#pragma warning restore 612, 618
        }
    }
}
